name: 'Checkout with Fallback'
description: 'Checks out a branch if it exists; otherwise, checks out the default branch.'
inputs:
  ref-if-exists:
    description: 'The branch name to check out if it exists.'
    required: true
  ref-fallback:
    description: "The branch name to check out if ref-if-exists does not exist. Defaults to the repository's default branch if not specified."
    required: false
  repository:
    description: 'The repository to check out. Passed without changes to action/checkout.'
    required: true
  path:
    description: 'The path to save the checked out files. Passed without changes to action/checkout.'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Check if ref-if-exists exists
      id: check-branch
      shell: bash
      run: |
        if git ls-remote --exit-code --heads 'https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ inputs.repository }}.git' '${{ inputs.ref-if-exists }}'; then
          echo "Branch exists: ${{ inputs.ref-if-exists }}"
          echo "branch=${{ inputs.ref-if-exists }}" >> $GITHUB_OUTPUT
        else
          echo "Branch does not exist: ${{ inputs.ref-if-exists }}"
          if [ -n "${{ inputs.ref-fallback }}" ]; then
            echo "Using fallback branch: ${{ inputs.ref-fallback }}"
            echo "branch=${{ inputs.ref-fallback }}" >> $GITHUB_OUTPUT
          else
            default_branch="$(git ls-remote --symref 'https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ inputs.repository }}.git' HEAD | awk '/^ref:/ { print $2 }' | sed 's|refs/heads/||')"
            echo "Using default branch: $default_branch"
            echo "branch=$default_branch" >> $GITHUB_OUTPUT
          fi
        fi
    - name: Checkout the determined branch
      uses: actions/checkout@v4
      with:
        ref: '${{ steps.check-branch.outputs.branch }}'
        repository: '${{ inputs.repository }}'
        path: '${{ inputs.path }}'
